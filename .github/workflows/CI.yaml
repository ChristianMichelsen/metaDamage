name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      # #----------------------------------------------
      # #              run test suite
      # #----------------------------------------------
      # - name: Run tests
      #   run: |
      #     source $(poetry env info --path)/bin/activate
      #     # source $HOME/.poetry/env
      #     # source .venv/bin/activate
      #     poetry run pytest .
      #     # pytest .

      #----------------------------------------------
      #              run test suite 1
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source $(poetry env info --path)/bin/activate
          poetry run pytest .

      #----------------------------------------------
      #              run test suite 2
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source $HOME/.poetry/env
          poetry run pytest .

      #----------------------------------------------
      #              run test suite 3
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source .venv/bin/activate
          poetry run pytest .

      #----------------------------------------------
      #              run test suite 4
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source $(poetry env info --path)/bin/activate
          pytest .

      #----------------------------------------------
      #              run test suite 5
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source $HOME/.poetry/env
          pytest .

      #----------------------------------------------
      #              run test suite 6
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          source .venv/bin/activate
          pytest .


      #----------------------------------------------
      #              run test suite 7
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          poetry run pytest .


      #----------------------------------------------
      #              run test suite 8
      #----------------------------------------------
      - name: Run tests
        continue-on-error: true
        run: |
          pytest .

      # ----------------------------------------------
      #              Run Black formatter
      # ----------------------------------------------
      # - name: Code Quality
      #   run: poetry run black . --check
